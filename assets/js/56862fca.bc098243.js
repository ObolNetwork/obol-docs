"use strict";(self.webpackChunkobol_docs=self.webpackChunkobol_docs||[]).push([[96480],{91102:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var n=i(74848),o=i(28453);const a={sidebar_position:10,description:"Frequently asked questions"},s="Frequently asked questions",r={id:"int/faq",title:"Frequently asked questions",description:"Frequently asked questions",source:"@site/versioned_docs/version-v0.6.0/int/faq.md",sourceDirName:"int",slug:"/int/faq",permalink:"/docs/v0.6.0/int/faq",draft:!1,unlisted:!1,editUrl:"https://github.com/ObolNetwork/obol-docs/edit/main/versioned_docs/version-v0.6.0/int/faq.md",tags:[],version:"v0.6.0",sidebarPosition:10,frontMatter:{sidebar_position:10,description:"Frequently asked questions"},sidebar:"tutorialSidebar",previous:{title:"Working groups",permalink:"/docs/v0.6.0/int/working-groups"},next:{title:"Introducing Charon",permalink:"/docs/v0.6.0/dv/introducing-charon"}},d={},l=[{value:"Does Obol have a token?",id:"does-obol-have-a-token",level:3},{value:"Can I keep my existing validator client?",id:"can-i-keep-my-existing-validator-client",level:3},{value:"Can I migrate my existing validator into a distributed validator?",id:"can-i-migrate-my-existing-validator-into-a-distributed-validator",level:3},{value:"Where can I learn more about Distributed Validators?",id:"where-can-i-learn-more-about-distributed-validators",level:3}];function c(e){const t={a:"a",h1:"h1",h3:"h3",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"frequently-asked-questions",children:"Frequently asked questions"})}),"\n",(0,n.jsx)(t.h3,{id:"does-obol-have-a-token",children:"Does Obol have a token?"}),"\n",(0,n.jsx)(t.p,{children:"No. Distributed validators use only ether."}),"\n",(0,n.jsx)(t.h3,{id:"can-i-keep-my-existing-validator-client",children:"Can I keep my existing validator client?"}),"\n",(0,n.jsxs)(t.p,{children:["Yes. Charon sits as a middleware between a validator client and it's beacon node. All validators that implement the standard REST API will be supported, along with all popular client delivery software such as DAppNode ",(0,n.jsx)(t.a,{href:"https://dappnode.github.io/explorer/#/",children:"packages"}),", Rocket Pool's ",(0,n.jsx)(t.a,{href:"https://github.com/rocket-pool/smartnode",children:"smart node"}),", StakeHouse's ",(0,n.jsx)(t.a,{href:"https://github.com/stake-house/wagyu",children:"wagyu"}),", and Stereum's ",(0,n.jsx)(t.a,{href:"https://stereum.net/development/#roadmap",children:"node launcher"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"can-i-migrate-my-existing-validator-into-a-distributed-validator",children:"Can I migrate my existing validator into a distributed validator?"}),"\n",(0,n.jsx)(t.p,{children:"It will be possible to split an existing validator keystore into a set of key shares suitable for a distributed validator, but it is a trusted distribution process, and if the old staking system is not safely shut down, it could pose a risk of double signing alongside the new distributed validator."}),"\n",(0,n.jsx)(t.p,{children:"In an ideal scenario, a distributed validator's private key should never exist in full in a single location."}),"\n",(0,n.jsx)(t.h3,{id:"where-can-i-learn-more-about-distributed-validators",children:"Where can I learn more about Distributed Validators?"}),"\n",(0,n.jsxs)(t.p,{children:["Have you checked out our ",(0,n.jsx)(t.a,{href:"https://blog.obol.tech",children:"blog site"})," and ",(0,n.jsx)(t.a,{href:"https://twitter.com/ObolNetwork",children:"twitter"})," yet? Maybe join our ",(0,n.jsx)(t.a,{href:"https://discord.gg/obol",children:"discord"})," too."]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>r});var n=i(96540);const o={},a=n.createContext(o);function s(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);