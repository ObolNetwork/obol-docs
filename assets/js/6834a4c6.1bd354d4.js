"use strict";(self.webpackChunkobol_docs=self.webpackChunkobol_docs||[]).push([[37160],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>g});var r=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},14131:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(58168),o=(n(96540),n(15680));const a={sidebar_position:3,description:"Add monitoring credentials to help the Obol Team monitor the health of your cluster"},i="Push Metrics to Obol Monitoring",l={unversionedId:"advanced/obol-monitoring",id:"advanced/obol-monitoring",title:"Push Metrics to Obol Monitoring",description:"Add monitoring credentials to help the Obol Team monitor the health of your cluster",source:"@site/docs/advanced/obol-monitoring.md",sourceDirName:"advanced",slug:"/advanced/obol-monitoring",permalink:"/docs/next/advanced/obol-monitoring",draft:!1,editUrl:"https://github.com/ObolNetwork/obol-docs/edit/main/docs/advanced/obol-monitoring.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Add monitoring credentials to help the Obol Team monitor the health of your cluster"},sidebar:"tutorialSidebar",previous:{title:"Monitoring your Node",permalink:"/docs/next/advanced/monitoring"},next:{title:"Create a DV using the SDK",permalink:"/docs/next/advanced/quickstart-sdk"}},s={},c=[],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.yg)(d,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"push-metrics-to-obol-monitoring"},"Push Metrics to Obol Monitoring"),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"This is ",(0,o.yg)("strong",{parentName:"p"},"optional")," and does not confer any special privileges within the Obol Network.")),(0,o.yg)("p",null,"You may have been provided with ",(0,o.yg)("strong",{parentName:"p"},"Monitoring Credentials")," used to push distributed validator metrics to Obol's central Prometheus cluster to monitor, analyze, and improve your Distributed Validator Cluster's performance."),(0,o.yg)("p",null,"The provided credentials needs to be added in ",(0,o.yg)("inlineCode",{parentName:"p"},"prometheus/prometheus.yml")," replacing ",(0,o.yg)("inlineCode",{parentName:"p"},"$PROM_REMOTE_WRITE_TOKEN")," and will look like:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"obol20tnt8UC...\n")),(0,o.yg)("p",null,"The updated ",(0,o.yg)("inlineCode",{parentName:"p"},"prometheus/prometheus.yml")," file should look like:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},'global:\n  scrape_interval:     30s # Set the scrape interval to every 30 seconds.\n  evaluation_interval: 30s # Evaluate rules every 30 seconds.\n\nremote_write:\n  - url: https://vm.monitoring.gcp.obol.tech/write\n    authorization:\n      credentials: obol20tnt8UC-your-credential-here...\n    write_relabel_configs:\n      - source_labels: [job]\n        regex: "charon"\n        action: keep # Keeps charon metrics and drop metrics from other containers.\n\nscrape_configs:\n  - job_name: "nethermind"\n    static_configs:\n      - targets: ["nethermind:8008"]\n  - job_name: "lighthouse"\n    static_configs:\n      - targets: ["lighthouse:5054"]\n  - job_name: "charon"\n    static_configs:\n      - targets: ["charon:3620"]\n  - job_name: "lodestar"\n    static_configs:\n      - targets: [ "lodestar:5064" ]\n')),(0,o.yg)("p",null,"After updating and saving the ",(0,o.yg)("inlineCode",{parentName:"p"},"prometheus/prometheus.yml"),", you must restart the ",(0,o.yg)("inlineCode",{parentName:"p"},"prometheus")," container for the monitoring credentials to take effect:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"docker compose restart prometheus\n")))}u.isMDXComponent=!0}}]);