"use strict";(self.webpackChunkobol_docs=self.webpackChunkobol_docs||[]).push([[74512],{95788:(e,n,t)=>{t.d(n,{Iu:()=>c,yg:()=>y});var a=t(11504);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=i,y=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return t?a.createElement(y,r(r({ref:n},c),{},{components:t})):a.createElement(y,r({ref:n},c))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:i,r[1]=l;for(var p=2;p<o;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},97100:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=t(45072),i=(t(11504),t(95788));const o={sidebar_position:8,description:"Run a cluster on mainnet"},r="Run a cluster on mainnet",l={unversionedId:"int/quickstart/quickstart-mainnet",id:"version-v0.15.0/int/quickstart/quickstart-mainnet",title:"Run a cluster on mainnet",description:"Run a cluster on mainnet",source:"@site/versioned_docs/version-v0.15.0/int/quickstart/quickstart-mainnet.md",sourceDirName:"int/quickstart",slug:"/int/quickstart/quickstart-mainnet",permalink:"/docs/v0.15.0/int/quickstart/quickstart-mainnet",draft:!1,editUrl:"https://github.com/ObolNetwork/obol-docs/edit/main/versioned_docs/version-v0.15.0/int/quickstart/quickstart-mainnet.md",tags:[],version:"v0.15.0",sidebarPosition:8,frontMatter:{sidebar_position:8,description:"Run a cluster on mainnet"},sidebar:"tutorialSidebar",previous:{title:"Exit a validator",permalink:"/docs/v0.15.0/int/quickstart/quickstart-exit"},next:{title:"Frequently asked questions",permalink:"/docs/v0.15.0/int/faq/general"}},s={},p=[{value:"Pre-requisites",id:"pre-requisites",level:3},{value:"Steps",id:"steps",level:3},{value:"Remote mainnet beacon node",id:"remote-mainnet-beacon-node",level:4},{value:"Mainnet node with mev-boost",id:"mainnet-node-with-mev-boost",level:4},{value:"Exit a mainnet distributed validator",id:"exit-a-mainnet-distributed-validator",level:4}],c={toc:p},d="wrapper";function u(e){let{components:n,...t}=e;return(0,i.yg)(d,(0,a.c)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"run-a-cluster-on-mainnet"},"Run a cluster on mainnet"),(0,i.yg)("admonition",{type:"caution"},(0,i.yg)("p",{parentName:"admonition"},"Note that you should proceed only if you accept the risk and have tested this on goerli testnet."),(0,i.yg)("p",{parentName:"admonition"},"DKG keys created for goerli cannot be used on mainnet and vice versa.")),(0,i.yg)("p",null,"This section is intended for users who wish to run their distributed validator on Ethereum mainnet."),(0,i.yg)("h3",{id:"pre-requisites"},"Pre-requisites"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Ensure you have ",(0,i.yg)("a",{parentName:"li",href:"https://docs.docker.com/engine/install/"},"docker")," installed."),(0,i.yg)("li",{parentName:"ul"},"Ensure you have ",(0,i.yg)("a",{parentName:"li",href:"https://git-scm.com/downloads"},"git")," installed."),(0,i.yg)("li",{parentName:"ul"},"Make sure ",(0,i.yg)("inlineCode",{parentName:"li"},"docker")," is running before executing the commands below.")),(0,i.yg)("h3",{id:"steps"},"Steps"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Clone the ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/ObolNetwork/charon-distributed-validator-node"},"charon-distributed-validator-node")," repo and ",(0,i.yg)("inlineCode",{parentName:"li"},"cd")," into the directory.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"# Clone this repo\ngit clone https://github.com/ObolNetwork/charon-distributed-validator-node.git\n\n# Change directory\ncd charon-distributed-validator-node\n")),(0,i.yg)("ol",{start:2},(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"If you have already cloned the repo, make sure that it is ",(0,i.yg)("a",{parentName:"p",href:"./quickstart-alone#updating-dv-stack"},"up-to-date"),".")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Copy the ",(0,i.yg)("inlineCode",{parentName:"p"},".env.sample")," file to ",(0,i.yg)("inlineCode",{parentName:"p"},".env")))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"cp -n .env.sample .env\n")),(0,i.yg)("ol",{start:4},(0,i.yg)("li",{parentName:"ol"},"In your ",(0,i.yg)("inlineCode",{parentName:"li"},".env")," file, uncomment and set values for ",(0,i.yg)("inlineCode",{parentName:"li"},"NETWORK")," & ",(0,i.yg)("inlineCode",{parentName:"li"},"LIGHTHOUSE_CHECKPOINT_SYNC_URL"))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"...\n# Overrides network for all the relevant services.\nNETWORK=mainnet\n...\n# Checkpoint sync url used by lighthouse to fast sync.\nLIGHTHOUSE_CHECKPOINT_SYNC_URL=https://mainnet.checkpoint.sigp.io/https://eth-clients.github.io/checkpoint-sync-endpoints/#mainnet\n...\n")),(0,i.yg)("p",null,"Note that you can choose any checkpoint sync url from ",(0,i.yg)("a",{parentName:"p",href:"https://eth-clients.github.io/checkpoint-sync-endpoints/#mainnet"},"https://eth-clients.github.io/checkpoint-sync-endpoints/#mainnet"),"."),(0,i.yg)("p",null,"Your DV stack is now mainnet ready \ud83c\udf89"),(0,i.yg)("h4",{id:"remote-mainnet-beacon-node"},"Remote mainnet beacon node"),(0,i.yg)("p",null,"If you already have a mainnet beacon node running somewhere and you want to use that instead of running EL (",(0,i.yg)("inlineCode",{parentName:"p"},"geth"),") & CL (",(0,i.yg)("inlineCode",{parentName:"p"},"lighthouse"),") as part\nof the repo, you can disable these images. To do so, follow these steps:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Copy the ",(0,i.yg)("inlineCode",{parentName:"li"},"docker-compose.override.yml.sample")," file")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"cp -n docker-compose.override.yml.sample docker-compose.override.yml\n")),(0,i.yg)("ol",{start:2},(0,i.yg)("li",{parentName:"ol"},"Uncomment the ",(0,i.yg)("inlineCode",{parentName:"li"},"profiles: [disable]")," section for both ",(0,i.yg)("inlineCode",{parentName:"li"},"geth")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"lighthouse"),". The override file should now look like this")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"services:\n  geth:\n    # Disable geth\n    profiles: [disable]\n    # Bind geth internal ports to host ports\n    #ports:\n      #- 8545:8545 # JSON-RPC\n      #- 8551:8551 # AUTH-RPC\n      #- 6060:6060 # Metrics\n\n  lighthouse:\n    # Disable lighthouse\n    profiles: [disable]\n    # Bind lighthouse internal ports to host ports\n    #ports:\n      #- 5052:5052 # HTTP\n      #- 5054:5054 # Metrics\n...\n")),(0,i.yg)("ol",{start:3},(0,i.yg)("li",{parentName:"ol"},"Then, uncomment and set the ",(0,i.yg)("inlineCode",{parentName:"li"},"CHARON_BEACON_NODE_ENDPOINTS")," variable in the ",(0,i.yg)("inlineCode",{parentName:"li"},".env")," file to your mainnet beacon node's URL")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"...\n# Connect to one or more external beacon nodes. Use a comma separated list excluding spaces.\nCHARON_BEACON_NODE_ENDPOINTS=<YOUR_REMOTE_MAINNET_BEACON_NODE_URL>\n...\n")),(0,i.yg)("h4",{id:"mainnet-node-with-mev-boost"},"Mainnet node with mev-boost"),(0,i.yg)("p",null,"If you are running your mainnet DV node with ",(0,i.yg)("inlineCode",{parentName:"p"},"mev-boost"),", you need to uncomment and set the ",(0,i.yg)("inlineCode",{parentName:"p"},"MEVBOOST_RELAYS")," variable in the ",(0,i.yg)("inlineCode",{parentName:"p"},".env")," file"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"...\n# MEV-Boost docker container image version, e.g. `latest` or `v1.4.0`.\n#MEVBOOST_VERSION=\nMEVBOOST_RELAYS=https://0x9000009807ed12c1f08bf4e81c6da3ba8e3fc3d953898ce0102433094e5f22f21102ec057841fcb81978ed1ea0fa8246@builder-relay-mainnet.blocknative.com\n...\n")),(0,i.yg)("p",null,"You can also use the ",(0,i.yg)("a",{parentName:"p",href:"https://boost-relay.flashbots.net/"},"flashbots relay"),"."),(0,i.yg)("h4",{id:"exit-a-mainnet-distributed-validator"},"Exit a mainnet distributed validator"),(0,i.yg)("p",null,"If you want to exit your mainnet validator, you need to uncomment and set the ",(0,i.yg)("inlineCode",{parentName:"p"},"EXIT_EPOCH")," variable in the ",(0,i.yg)("inlineCode",{parentName:"p"},".env")," file"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"...\n# Cluster wide consistent exit epoch. Set to latest for fork version, see `curl $BEACON_NODE/eth/v1/config/fork_schedule`\n# Currently, the latest fork is bellatrix (epoch: 144896)\nEXIT_EPOCH=144896\n...\n")),(0,i.yg)("p",null,"Note that ",(0,i.yg)("inlineCode",{parentName:"p"},"EXIT_EPOCH")," should be ",(0,i.yg)("inlineCode",{parentName:"p"},"194048")," after the ",(0,i.yg)("a",{parentName:"p",href:"https://blog.ethereum.org/2023/03/28/shapella-mainnet-announcement"},"shapella fork"),"."))}u.isMDXComponent=!0}}]);