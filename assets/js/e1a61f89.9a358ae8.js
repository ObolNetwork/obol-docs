"use strict";(self.webpackChunkobol_docs=self.webpackChunkobol_docs||[]).push([[21069],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7066:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const r={sidebar_position:7,description:"Run a cluster on mainnet"},o="Run a DV on mainnet",l={unversionedId:"int/quickstart/quickstart-mainnet",id:"version-v0.17.0/int/quickstart/quickstart-mainnet",title:"Run a DV on mainnet",description:"Run a cluster on mainnet",source:"@site/versioned_docs/version-v0.17.0/int/quickstart/quickstart-mainnet.md",sourceDirName:"int/quickstart",slug:"/int/quickstart/quickstart-mainnet",permalink:"/docs/int/quickstart/quickstart-mainnet",draft:!1,editUrl:"https://github.com/ObolNetwork/obol-docs/edit/main/versioned_docs/version-v0.17.0/int/quickstart/quickstart-mainnet.md",tags:[],version:"v0.17.0",sidebarPosition:7,frontMatter:{sidebar_position:7,description:"Run a cluster on mainnet"},sidebar:"tutorialSidebar",previous:{title:"Update a DV",permalink:"/docs/int/quickstart/update"},next:{title:"Create a DV using the SDK",permalink:"/docs/int/quickstart/advanced/quickstart-sdk"}},s={},p=[{value:"Pre-requisites",id:"pre-requisites",level:3},{value:"Steps",id:"steps",level:3},{value:"Remote mainnet beacon node",id:"remote-mainnet-beacon-node",level:4},{value:"Exit a mainnet distributed validator",id:"exit-a-mainnet-distributed-validator",level:4}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"run-a-dv-on-mainnet"},"Run a DV on mainnet"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Charon is in an alpha state, and you should proceed only if you accept the risk, the ",(0,i.kt)("a",{parentName:"p",href:"https://obol.tech/terms.pdf"},"terms of use"),", and have tested running a Distributed Validator on a testnet first."),(0,i.kt)("p",{parentName:"admonition"},"Distributed Validators created for goerli cannot be used on mainnet and vice versa, please take caution when creating, backing up, and activating mainnet validators.")),(0,i.kt)("p",null,"This section is intended for users who wish to run their Distributed Validator on Ethereum mainnet."),(0,i.kt)("h3",{id:"pre-requisites"},"Pre-requisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ensure you have ",(0,i.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/install/"},"docker")," installed."),(0,i.kt)("li",{parentName:"ul"},"Ensure you have ",(0,i.kt)("a",{parentName:"li",href:"https://git-scm.com/downloads"},"git")," installed."),(0,i.kt)("li",{parentName:"ul"},"Make sure ",(0,i.kt)("inlineCode",{parentName:"li"},"docker")," is running before executing the commands below.")),(0,i.kt)("h3",{id:"steps"},"Steps"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Clone the ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/ObolNetwork/charon-distributed-validator-node"},"charon-distributed-validator-node")," repo and ",(0,i.kt)("inlineCode",{parentName:"li"},"cd")," into the directory.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# Clone this repo\ngit clone https://github.com/ObolNetwork/charon-distributed-validator-node.git\n\n# Change directory\ncd charon-distributed-validator-node\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If you have already cloned the repo, make sure that it is ",(0,i.kt)("a",{parentName:"p",href:"./update"},"up-to-date"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Copy the ",(0,i.kt)("inlineCode",{parentName:"p"},".env.sample")," file to ",(0,i.kt)("inlineCode",{parentName:"p"},".env")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cp -n .env.sample .env\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"In your ",(0,i.kt)("inlineCode",{parentName:"li"},".env")," file, uncomment and set values for ",(0,i.kt)("inlineCode",{parentName:"li"},"NETWORK")," & ",(0,i.kt)("inlineCode",{parentName:"li"},"LIGHTHOUSE_CHECKPOINT_SYNC_URL"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"...\n# Overrides network for all the relevant services.\nNETWORK=mainnet\n...\n# Checkpoint sync url used by lighthouse to fast sync.\nLIGHTHOUSE_CHECKPOINT_SYNC_URL=https://mainnet.checkpoint.sigp.io/https://eth-clients.github.io/checkpoint-sync-endpoints/#mainnet\n...\n")),(0,i.kt)("p",null,"Note that you can choose any checkpoint sync url from ",(0,i.kt)("a",{parentName:"p",href:"https://eth-clients.github.io/checkpoint-sync-endpoints/#mainnet"},"https://eth-clients.github.io/checkpoint-sync-endpoints/#mainnet"),"."),(0,i.kt)("p",null,"Your DV stack is now mainnet ready \ud83c\udf89"),(0,i.kt)("h4",{id:"remote-mainnet-beacon-node"},"Remote mainnet beacon node"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Using a remote beacon node will impact the performance of your Distributed Validator and should be used sparingly.")),(0,i.kt)("p",null,"If you already have a mainnet beacon node running somewhere and you want to use that instead of running EL (",(0,i.kt)("inlineCode",{parentName:"p"},"geth"),") & CL (",(0,i.kt)("inlineCode",{parentName:"p"},"lighthouse"),") as part of the repo, you can disable these images. To do so, follow these steps:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Copy the ",(0,i.kt)("inlineCode",{parentName:"li"},"docker-compose.override.yml.sample")," file")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cp -n docker-compose.override.yml.sample docker-compose.override.yml\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Uncomment the ",(0,i.kt)("inlineCode",{parentName:"li"},"profiles: [disable]")," section for both ",(0,i.kt)("inlineCode",{parentName:"li"},"geth")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"lighthouse"),". The override file should now look like this")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"services:\n  geth:\n    # Disable geth\n    profiles: [disable]\n    # Bind geth internal ports to host ports\n    #ports:\n      #- 8545:8545 # JSON-RPC\n      #- 8551:8551 # AUTH-RPC\n      #- 6060:6060 # Metrics\n\n  lighthouse:\n    # Disable lighthouse\n    profiles: [disable]\n    # Bind lighthouse internal ports to host ports\n    #ports:\n      #- 5052:5052 # HTTP\n      #- 5054:5054 # Metrics\n...\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Then, uncomment and set the ",(0,i.kt)("inlineCode",{parentName:"li"},"CHARON_BEACON_NODE_ENDPOINTS")," variable in the ",(0,i.kt)("inlineCode",{parentName:"li"},".env")," file to your mainnet beacon node's URL")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"...\n# Connect to one or more external beacon nodes. Use a comma separated list excluding spaces.\nCHARON_BEACON_NODE_ENDPOINTS=<YOUR_REMOTE_MAINNET_BEACON_NODE_URL>\n...\n")),(0,i.kt)("h4",{id:"exit-a-mainnet-distributed-validator"},"Exit a mainnet distributed validator"),(0,i.kt)("p",null,"If you want to exit your mainnet validator, you need to uncomment and set the ",(0,i.kt)("inlineCode",{parentName:"p"},"EXIT_EPOCH")," variable in the ",(0,i.kt)("inlineCode",{parentName:"p"},".env")," file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"...\n# Cluster wide consistent exit epoch. Set to latest for fork version, see `curl $BEACON_NODE/eth/v1/config/fork_schedule`\n# Currently, the latest fork is capella (epoch: 194048)\nEXIT_EPOCH=194048\n...\n")),(0,i.kt)("p",null,"Note that ",(0,i.kt)("inlineCode",{parentName:"p"},"EXIT_EPOCH")," should be ",(0,i.kt)("inlineCode",{parentName:"p"},"194048")," after the ",(0,i.kt)("a",{parentName:"p",href:"https://blog.ethereum.org/2023/03/28/shapella-mainnet-announcement"},"shapella fork"),"."))}d.isMDXComponent=!0}}]);