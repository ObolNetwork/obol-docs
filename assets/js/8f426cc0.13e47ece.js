"use strict";(self.webpackChunkobol_docs=self.webpackChunkobol_docs||[]).push([[26190],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),h=o,y=u["".concat(l,".").concat(h)]||u[h]||d[h]||a;return r?n.createElement(y,i(i({ref:t},p),{},{components:r})):n.createElement(y,i({ref:t},p))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},19578:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const a={sidebar_position:3,description:"Move the private key shares to the nodes and run the cluster"},i="Deploy the cluster",s={unversionedId:"int/quickstart/alone/deploy",id:"version-v0.17.1/int/quickstart/alone/deploy",title:"Deploy the cluster",description:"Move the private key shares to the nodes and run the cluster",source:"@site/versioned_docs/version-v0.17.1/int/quickstart/alone/deploy.md",sourceDirName:"int/quickstart/alone",slug:"/int/quickstart/alone/deploy",permalink:"/docs/int/quickstart/alone/deploy",draft:!1,editUrl:"https://github.com/ObolNetwork/obol-docs/edit/main/versioned_docs/version-v0.17.1/int/quickstart/alone/deploy.md",tags:[],version:"v0.17.1",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Move the private key shares to the nodes and run the cluster"},sidebar:"tutorialSidebar",previous:{title:"Create the private key shares",permalink:"/docs/int/quickstart/alone/create-keys"},next:{title:"Run a cluster as a group",permalink:"/docs/int/quickstart/group/"}},l={},c=[],p={toc:c};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deploy-the-cluster"},"Deploy the cluster"),(0,o.kt)("p",null,"To distribute your cluster physically and start the DV, each node needs a directory called ",(0,o.kt)("inlineCode",{parentName:"p"},".charon")," with one (or several) private key shares within it as per the structure below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 .charon\n\u2502\xa0\xa0 \u251c\u2500\u2500 charon-enr-private-key\n\u2502\xa0\xa0 \u251c\u2500\u2500 cluster-lock.json\n\u2502\xa0\xa0 \u251c\u2500\u2500 deposit-data.json\n\u2502\xa0\xa0 \u2514\u2500\u2500 validator_keys\n\u2502\xa0\xa0     \u251c\u2500\u2500 keystore-0.json\n\u2502\xa0\xa0     \u251c\u2500\u2500 keystore-0.txt\n\u2502\xa0\xa0     \u251c\u2500\u2500 ...\n\u2502\xa0\xa0     \u251c\u2500\u2500 keystore-N.json\n\u2502\xa0\xa0     \u2514\u2500\u2500 keystore-N.txt\n")),(0,o.kt)("p",null,"\ud83d\udc49 Use the single node ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ObolNetwork/charon-distributed-validator-node"},"docker compose"),", the kubernetes ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ObolNetwork/charon-k8s-distributed-validator-node"},"manifests"),", or the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ObolNetwork/helm-charts"},"helm chart")," example repos to get your nodes up and connected after loading the ",(0,o.kt)("inlineCode",{parentName:"p"},".charon")," folder artifacts into them appropriately."),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Right now, the ",(0,o.kt)("inlineCode",{parentName:"p"},"charon-distributed-node-cluster")," repo ",(0,o.kt)("a",{parentName:"p",href:"./create-keys"},"used earlier to create the private keys")," outputs a folder structure like ",(0,o.kt)("inlineCode",{parentName:"p"},".charon/ cluster/node0/validator_keys"),". Make sure to grab the ",(0,o.kt)("inlineCode",{parentName:"p"},"./node0/*")," folder, RENAME it to ",(0,o.kt)("inlineCode",{parentName:"p"},".charon")," and then move it to one of the single node repo above to have a working cluster as per the folder structure shown above.")))}u.isMDXComponent=!0}}]);